plugins {
  id("com.github.johnrengelman.shadow") version "6.1.0"
  id("io.micronaut.application") version "1.2.0"
}

version = "0.1"
group = "org.lisanderl"

repositories {
  mavenCentral()
  jcenter()
}

micronaut {
  runtime("lambda")
  testRuntime("junit5")
  processing {
    incremental(true)
    annotations("org.lisanderl.*")
  }
}

dependencies {
  compileOnly 'org.projectlombok:lombok:1.18.12'
  annotationProcessor "org.projectlombok:lombok:1.18.12"
  //  implementation("io.micronaut.aws:micronaut-aws-sdk-v2") {
  //    exclude group: "software.amazon.awssdk", module: "apache-client"
  //    exclude group: "software.amazon.awssdk", module: "netty-nio-client"
  //  }
  //
  //  implementation ("software.amazon.awssdk:dynamodb") {
  //    exclude group: "software.amazon.awssdk", module: "apache-client"
  //    exclude group: "software.amazon.awssdk", module: "netty-nio-client"
  //  }
  //  implementation("software.amazon.awssdk:url-connection-client")
  implementation("io.micronaut:micronaut-validation")
  implementation("io.micronaut:micronaut-runtime")
  implementation("javax.annotation:javax.annotation-api")
  implementation("io.micronaut.aws:micronaut-function-aws-custom-runtime") {
    exclude group: "com.fasterxml.jackson.module", module: "jackson-module-afterburner"
  }
  implementation("io.micronaut.aws:micronaut-function-aws-api-proxy") {
    exclude group: "com.fasterxml.jackson.module", module: "jackson-module-afterburner"
  }
  runtimeOnly("ch.qos.logback:logback-classic")
  testImplementation("io.micronaut:micronaut-http-client")
}

application {
  mainClass.set("io.micronaut.function.aws.runtime.MicronautLambdaRuntime")
}

java {
  sourceCompatibility = JavaVersion.toVersion("11")
  targetCompatibility = JavaVersion.toVersion("11")
}



